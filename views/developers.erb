<div class="hero-unit">
  <h1>IndieAuth.com for Developers</h1>
</div>

<div class="container">

  <div class="alert alert-danger" role="alert" style="margin-bottom: 2em;">
    Due to confusion around the name, this service is being deprecated, and will eventually be shut down. Please visit <a href="https://indieweb.org/IndieAuth#naming_confusion">indieweb.org</a> for more details, and <a href="https://indielogin.com/api">indielogin.com</a> for the replacement service.
  </div>

  <div class="section narrow large h-entry">

    <h2 id="documentation" class="p-name">Using IndieAuth.com to sign users in to your website</h2>

    <div class="e-content">
      <p>If you are building a website and need to sign people in, you can use IndieAuth.com to handle web sign-in so that you don't have to implement OAuth code for each provider.</p>

      <h3>1. Create a Web Sign-in form</h3>

      <pre style="word-wrap: normal;"><%==
'<form action="https://indieauth.com/auth" method="get">
  <label for="indie_auth_url">Web Address:</label>
  <input id="indie_auth_url" type="text" name="me" placeholder="yourdomain.com" />
  <p><button type="submit">Sign In</button></p>
  <input type="hidden" name="client_id" value="https://example.com/" />
  <input type="hidden" name="redirect_uri" value="https://example.com/callback" />
</form>' %></pre>

      <p>
        <h4>Parameters</h4>
        <ul>
          <li><b>action</b>: Set the action of the form to this service (<code>https://indieauth.com/auth</code>) or <a href="https://github.com/aaronpk/IndieAuth.com">download the source</a> and run your own server.</li>
          <li><b>me</b>: The "me" parameter is the URL that the user enters</li>
          <li><b>client_id</b>: Set the client_id in a hidden field to let indieauth.com know the home page of the application the user is signing in to</li>
          <li><b>redirect_uri</b>: Set the redirect_uri in a hidden field to let indieauth.com know where to redirect back to after authentication is complete</li>
        </ul>
      </p>

      <br />

      <h3>2. The user logs in with their domain</h3>

      <p>After the user enters their domain in the sign-in form and submits, indieauth.com goes and scans their domain looking for rel="me" links from providers it knows about (see <a href="/#supported-providers">Supported Providers</a> above). It also verifies that the third-party website links back to the user's domain with a rel="me" link as well.</p>

      <br />

      <h3>3. The user is redirected back to your site</h3>

      <p><pre><code>https://example.com/callback?code=gk7n4opsyuUxhvF4</code></pre></p>

      <p>If everything is successful, the user will be redirected back to the redirect_uri you specified in the form. There will be a token in a query string parameter, <code>code</code>.</p>

      <br />

      <h3>4. Verify the authorization code with indieauth.com</h3>

      <p>At this point you need to verify the code which will also return the domain name of the authenticated user. Make a POST request to indieauth.com/auth with the code and all the original parameters of the request, and you will get back the domain name of the authenticated user.</p>

      <pre>POST https://indieauth.com/auth HTTP/1.1
Content-Type: application/x-www-form-urlencoded;charset=UTF-8
Accept: application/json

code=gk7n4opsyuUxhvF4&amp;
redirect_uri=https://example.com/callback&amp;
client_id=https://example.com/</pre>

      <p>An example successful response:</p>

      <pre>HTTP/1.1 200 OK
Content-Type: application/json

{
  "me": "https://aaronparecki.com/"
}</pre>

      <p>An example error response:</p>

      <pre>HTTP/1.1 404 Not Found
Content-Type: application/json

{
  "error": "invalid_request",
  "error_description": "The code provided was not valid"
}</pre>

      <br />

      <h3>5. Done!</h3>

      <p>At this point you know the domain belonging to the authenticated user. You can store the domain secure session and log the user in with their domain name identity. You don't need to worry about whether they authenticated with Google, Twitter or Github, their identity is their domain name! You won't have to worry about merging duplicate accounts or handling error cases when Twitter is offline.</p>

    </div>



  </div><!-- section -->
</div><!-- container -->

<%= partial :'partials/_footer' %>
