<script>
var me = "<%= @me %>";
var redirect_uri = "<%= @redirect_uri %>";

function set_provider_status(index, status, error) {
  $("#profile_"+index+" .status_img").addClass(status).removeClass("loading");
  if(error) {
    $("#profile_"+index+" .status").html(error);
  }
}

function update_progress_bar() {

  // The "success" bar starts out at 15% because 5% is reserved for starting the page and 10% is reserved for loading the links
  var success = ($("#profiles .status_img.verified").length / $("#profiles li").length) * 0.85;
  var warning = ($("#profiles .status_img.unsupported").length / $("#profiles li").length) * 0.85;
  var error = ($("#profiles .status_img.error").length / $("#profiles li").length) * 0.85;

  success = Math.round(success*100);
  warning = Math.round(warning*100);
  error = Math.round(error*100)

  while(success + warning + error > 100) {
    success = success - 1;
  }

  $("#progress_bar .bar-verified").css("width", success+"%");
  $("#progress_bar .bar-info").css("width", warning+"%");
  $("#progress_bar .bar-danger").css("width", error+"%");
}

function complete_progress_bar() {
  $("#progress_bar").removeClass("active progress-striped");
}

function set_up_sms_auth() {
  $(".sms-auth").click(function(){
    var btn = $(this);
    var status = $(this).parents('li').children('.status');

    if(btn.text() == "Verify") {
      btn.attr("disabled","disabled");
      status.text("Verifying...");

      $.get("/auth/verify_sms.json", {
        me: me,
        profile: $(this).attr('href'),
        code: btn.parent().children('.sms_code').val()
      }, function(data){
        if(data.result == "verified") {
          status.text("Code was successfully verified! Redirecting...");
          window.location = data.redirect;
        } else {
          btn.parent().children('input[type=text]').remove();
          btn.text()
          status.text("The code you entered did not match, or the code expired.");
        }
      });
    } else {
      btn.attr("disabled","disabled");
      status.text("Sending verification code...");

      $.get("/auth/send_sms.json", {
        me: me,
        profile: btn.attr('href'),
        redirect_uri: redirect_uri
      }, function(data){
        if(data.result == "sent") {
          // Swap the button for a field to enter the code
          btn.text("Verify").removeAttr("disabled");
          status.text("Sent! Enter the verification code you received above.");
          btn.parent().prepend('<input type="text" class="span1 sms_code">').focus();
        }
      });
    }
    return false;
  });
}

function set_up_email_auth() {
  $(".persona-login").click(function(){
    var img = $(this);
    var status = $(this).parents('li').children('.status');

    img.attr("src", "/img/email_sign_in_disabled.png");
    status.text("Launching Persona login");

    navigator.id.get(function(assertion){

      if(assertion == null) {
        img.attr("src", "/img/email_sign_in_blue.png");
        status.text("Ok! Click to authenticate using "+img.data('email').replace(/mailto:/,''));
      } else {
        status.text("Verifying login...");

        $.post("/auth/verify_email.json", {
          me: me,
          profile: img.data('email'),
          redirect_uri: redirect_uri,
          assertion: assertion
        }, function(data) {
          if(data.status == "okay") {
            status.text("Login succeeded! Redirecting...");
            window.location = data.redirect;
          } else {
            status.text("Auth failed: " + data.reason);
            img.attr("src", "/img/email_sign_in_blue.png");
          }
        });
      }
    }, {
      siteName: "IndieAuth"
    });
  });
}

function set_up_totp_auth() {
  $(".totp-auth").click(function(){
    var btn = $(this);
    var status = $(this).parents('li').children('.status');

    if(btn.text() == "Verify") {
      btn.attr("disabled","disabled");
      status.text("Verifying...");

      $.get("/auth/verify_totp.json", {
        me: me,
        redirect_uri: redirect_uri,
        code: btn.parent().children('.totp_code').val()
      }, function(data){
        if(data.result == "verified") {
          status.text("Code was successfully verified! Redirecting...");
          window.location = data.redirect;
        } else {
          btn.parent().children('input[type=text]').remove();
          btn.text()
          status.text("The code you entered was invalid.");
        }
      });
    } else {
      // Swap the button for a field to enter the code
      status.text("Enter a verification code");
      btn.text("Verify");
      btn.parent().prepend('<input type="text" class="span1 totp_code">').focus();
    }
    return false;
  });
}

function format_sms_number(href) {
  href = href.replace(/sms:\/?\/?/, '');
  if(match=href.match(/^\+1([0-9]{3})([0-9]{3})([0-9]{4})$/)) {
    href = '('+match[1]+') '+match[2]+'-'+match[3];
  }
  return 'SMS: '+href;
}

function verify_link_back(me, link, i, use_cached) {

  // Don't make an HTTP request for links we already know aren't valid providers
  if(link.provider == null) {
    set_provider_status(i, 'unsupported', 'This is not a supported authentication provider.');
    provider_verification_finished();
    return;
  }

  // Don't need to verify email or SMS links, provide the buttoms immediately
  if(link.provider == 'email') {
    $("#profile_"+i+" .link").html('<img src="/img/email_sign_in_blue.png" class="persona-login begin-auth" data-email="'+link.profile+'" />');
    set_provider_status(i, 'verified', 'Click to authenticate using '+link.profile.replace(/mailto:/,''));
    set_up_email_auth();
    provider_verification_finished();
    return;
  }

  if(link.provider == 'sms') {
    $("#profile_"+i+" .link").html('<a href="'+link.profile+'" class="btn btn-success sms-auth begin-auth">'+format_sms_number(link.profile)+'</a>');
    set_provider_status(i, 'verified', 'Click to receive a verification code via SMS.');
    set_up_sms_auth();
    provider_verification_finished();
    return;
  }

  if(link.provider == 'totp') {
    $("#profile_"+i+" .link").html('<a href="#" class="btn btn-success totp-auth begin-auth">Google Authenticator</a>');
    set_provider_status(i, 'verified', 'Click to enter a TOTP code.');
    set_up_totp_auth();
    provider_verification_finished();
    return;
  }

  if(use_cached) {
    var profile = $("#profile_"+i);

    if(profile.data('provider') == 'email' || profile.data('provider') == 'sms') {
      return;
    } 

    update_provider_status(link, {
      verified: profile.data('verified'),
      error: false,
      auth_path: profile.data('auth-path')
    }, profile.attr('id').split('_')[1]);

  } else {
    // Verify the url links back to the rel="me" link specified
    $.get("/auth/verify_link.json", {me: me, profile: link.profile}, function(data){
      update_provider_status(link, data, i);
    });    
  }
}

function update_provider_status(link, data, i) {
  if(data.error == "unsupported_provider") {
    set_provider_status(i, 'unsupported', 'This is not a supported authentication provider.');
  } else if(data.verified) {
    set_provider_status(i, 'verified', 'Ok! Click to authenticate using this provider.');
    $("#profile_"+i+" .link").html('<a href="'+data.auth_path+'&redirect_uri='+encodeURIComponent(redirect_uri)+'" class="btn btn-success">'+link.profile.replace(/^(https|http|sms):\/\//, "")+'</a>');              
  } else if(data.verified == false) {
    var message;
    if(data.error_description) {
      message = data.error_description;
    } else {
      message = 'There was an error verifying this provider. Confirm you have a rel="me" link on this site pointing to your website.';
    }
    set_provider_status(i, 'error', message);
  } else {
    set_provider_status(i, 'error', 'An unknown error occurred with this provider.');
  }

  provider_verification_finished();
}

function provider_verification_finished() {

  if($("#profiles .status_img.verified").length == 0 && $("#profiles .status_img.loading").length == 0) {
    $(".loading_message").hide();
    $(".unsupported_links_error").show();
  } else {
    $("#num_providers").html($("#profiles .status_img.verified").length);
    $(".unsupported_links_error").hide();
    $(".loading_message").hide();
    $(".continue_message").show();
  }
  update_progress_bar();

  // Check if all the providers are done being checked, if so, verify there is at least one valid one
  if($("#profiles .status_img.loading").length == 0) {
    $(".continue_message .rescan-button").show();
    complete_progress_bar();
  } else {
    $(".continue_message .rescan-button").hide();    
  }
}

function selected_profile() {
  var selected = $("#profiles li.selected");
  if(selected.length > 0) {
    return $(selected[0]);
  } else {
    return false;
  }
}

$(function(){
  $("#progress_bar .bar").tooltip({placement: "bottom"});
  update_progress_bar();

  $("body").keydown(function(e) {
    switch(e.keyCode) {
      case 74: // j
        if(selected_profile() == false) {
          // If none is selected yet, select the first
          $($("#profiles li")[0]).addClass("selected");
        } else {
          // Find the ID of this element, then set the next element to "selected"
          var index = parseInt(selected_profile().attr("id").match(/_(\d+)/)[1]);
          $("#profiles li").removeClass("selected");
          if($("#profile_"+(index+1)).length == 0) {
            index = -1;
          }
          $("#profile_"+(index+1)).addClass("selected");
        }
        break;

      case 75: // k
        if(selected_profile() == false) {
          // If none is selected yet, select the last
          var profiles = $("#profiles li");
          $(profiles[profiles.length-1]).addClass("selected");
        } else {
          // Find the ID of this element, then set the previous element to "selected"
          var index = parseInt(selected_profile().attr("id").match(/_(\d+)/)[1]);
          $("#profiles li").removeClass("selected");
          if($("#profile_"+(index-1)).length == 0) {
            index = $("#profiles li").length;
          }
          $("#profile_"+(index-1)).addClass("selected");
        }

        break;
      case 13: // enter
        if(selected_profile() !== false) {
          // click the thing inside
          $("#profiles li.selected a, #profiles li.selected .begin-auth")[0].click();
        } else {
          // nothing selected but they pressed enter, so sign in with the first
          $($("#profiles li")[0]).addClass("selected");
          $("#profiles li.selected a, #profiles li.selected .begin-auth")[0].click();
        }
        break;
    }
  });

  start_scan();

  $(".rescan-button").click(function(){
    // Erase all existing profiles
    $("#profiles li").remove();
    
    // Re-set the notices
    $("#progress_bar .bar-loading").css("width", "5%");
    $("#progress_bar .bar-verified").css("width", "0");
    $("#progress_bar .bar-info").css("width", "0");
    $("#progress_bar .bar-danger").css("width", "0");
    $("#progress_bar").show();

    $(".loading_message").show();

    $(".no_links_error").hide();
    $(".unsupported_links_error").hide();
    $(".continue_message").hide();

    $(".last-refresh").html("");

    // Start a new scan
    start_scan();
  });
});

function start_scan() {
  // Returning users will have a bunch of profiles already written to the HTML
  if($("#profiles li").length > 0) {
    // Skip loading links
    $("#progress_bar .bar-loading").css("width", "15%");
    update_progress_bar();

    // Run the "verify" function which will set up the JS hooks and add the buttons
    // for email and sms profiles, but set to "use_cached" to avoid making HTTP requests
    $("#profiles li").each(function(){
      verify_link_back(me, {
        profile: $(this).data('profile'), 
        verified: $(this).data('verified'),
        provider: $(this).data('provider')
      }, $(this).attr('id').split('_')[1], true);
    });
  } else {
    $.get("/auth/relme_links.json", {me: me}, function(data){
      if(data && data.links && data.links.length > 0) {
        $("#progress_bar .bar-loading").css("width", "15%");
        var template = $('#profile_link_template').html();
        $(data.links).each(function(i, link){
          var index = i;
          var formatted_link = link.profile.replace(/^https?:\/\//, "");
          if(formatted_link.match(/sms:\/?\/?/)) {
            formatted_link = format_sms_number(formatted_link);
          }

          $("#profiles").append(Mustache.to_html(template, {link: formatted_link, index: i}));

          verify_link_back(me, link, i);
        });
      } else {
        $("#progress_bar").hide();
        $(".loading_message").hide();
        $(".no_links_error").show();
      }
    });
  }
}

</script>

<div class="wrapper">

  <% if params[:client_id] %>
    <h3>Allow <%= params[:client_id].gsub(/https?:\/\//, '') %> access to <%= @me.gsub(/https?:\/\//, '') %>?</h3>

    <div class="continue_message" style="display: none;">
      <p>The app <b><%= params[:client_id] %></b> would like to access your site, <b><%= @me %></b>.</p>
      <% if params[:scope] %>
        <p>Requested <a href="http://indiewebcamp.com/scope">scopes</a>:<br>
          <ul>
            <%= params[:scope].split(' ').map{|s| "<li>#{s}</li>"}.join %>
          </ul>
        </p>
      <% end %>
      <p>Authenticate using one of the methods below to approve this request.</p>
    </div>
  <% else %>
    <h3>Authenticating as <%= @me %></h3>
  <% end %>

  <div class="loading_message">
    <div class="alert alert-info">Finding rel="me" links on <%= @me %></div>
  </div>
  
  <div class="no_links_error" style="display: none;">
    <div class="alert alert-error">
      No rel="me" links were found on your site!
      <a class="rescan-button" href="#" style="float:right;"><i class="icon-retweet"></i> Re-Scan</a>
    </div>
  </div>
  <div class="unsupported_links_error" style="display: none;">
    <div class="alert alert-error">
      No supported rel="me" links were found on your site!
      <a class="rescan-button" href="#" style="float:right;"><i class="icon-retweet"></i> Re-Scan</a>
    </div>
  </div>
  <div class="continue_message" style="display: none;">
    <div class="alert alert-success">
      <span id="num_providers">1</span> supported and verified providers were found!
      <a class="rescan-button" href="#" style="float:right;"><i class="icon-retweet"></i> Re-Scan</a>
      <span class="last-refresh"><%= (@user ? @user.last_refresh : '') %></span>
    </div>
  </div>

  <div id="progress_bar" class="progress progress-striped active">
    <div class="bar bar-success bar-loading" style="width: 5%;" rel="tooltip" title="Loaded links from your site"></div>
    <div class="bar bar-success bar-verified" style="width: 0%;" rel="tooltip" title="Verified profiles"></div>
    <div class="bar bar-info" style="width: 0;" rel="tooltip" title="Unsupported providers"></div>
    <div class="bar bar-danger" style="width: 0;" rel="tooltip" title="Error verifying provider"></div>
  </div>

  <ul id="profiles">
    <% 
      # If they are a returning visitor, the database already has their list of profiles. Populate with that now. 
      # The database will only return URLs that are valid providers, not the complete list of rel-me links on the person's site.
    %>
    <% @profiles.each_with_index do |profile,i| %>
      <% next if @redirect_uri == 'totp' and profile.provider.code == 'totp' %>
      <li class="profile <%= profile.provider.code %>" id="profile_<%= i %>" data-profile="<%= profile[:href] %>" data-verified="<%= profile.verified ? true : false %>" data-provider="<%= profile.provider.code %>" data-auth-path="/auth/start?me=<%=URI.encode_www_form_component @me%>&amp;profile=<%=URI.encode_www_form_component profile[:href]%>">
        <span class="status_img <%= profile.verified ? 'verified' : 'error' %>"></span>
        <span class="link"><%= profile[:href] %></span>
        <div class="status">Verifying...</div>
      </li>
    <% end %>
  </ul>

  <div class="no_links_error" style="display: none;">
    <p>Add links on your home page to your various social profiles (Twitter, Github, etc) with the attribute rel="me"</p>
    <p>Ensure your profiles link back to your home page.</p>
    <p><a href="https://indieauth.com/setup">Full Setup Instructions</a></p>
  </div>
  <div class="unsupported_links_error" style="display: none;">
    <p>Currently only the following providers are supported:
      <ul>
        <% @providers.each do |provider| %>
          <li><a href="<%= provider[:home_page] %>"><%= provider[:name] %></a></li>
        <% end %>
      </ul>
    </p>
    <p>Add links on your home page to your various social profiles (Twitter, Github, etc) with the attribute rel="me"</p>
    <p>Ensure your profiles link back to your home page.</p>
    <p><a href="/setup">Full Setup Instructions</a></p>
  </div>
  <% if !params[:client_id] %>
    <div class="continue_message" style="display: none;">
      <p>Click on one of the highlighed providers above to authenticate. The site you are logging in to will not have access to your account on any of the providers.</p>

      <% if @redirect_uri %>
        <div class="redirect">You will be redirected to <%= @redirect_uri %> to finish logging in to the site.</div>
      <% end %>
    </div>
  <% else %>
    <% if @redirect_uri %>
      <div class="redirect">You will be redirected to <code><%= @redirect_uri %></code> after authorizing this application.</div>
    <% end %>
  <% end %>

</div>

<div style="display:none;">
<img src="/img/profile-verified.png") />
<img src="/img/profile-unsupported.png") />
<img src="/img/profile-error.png") />
</div>

<script id="profile_link_template" type="text/template">
<li id="profile_{{index}}">
  <span class="status_img loading"></span>
  <span class="link">{{link}}</span>
  <div class="status">Verifying...</div>
</li>
</script>
<style type="text/css">

  .wrapper {
    width: 500px;
    margin: 20px auto;
  }

  h3 {
    font-size: 20px;
    font-weight: bold;
    color: #444;
  }

  ul#profiles {
    list-style-type: none;
  }

  .alert {
    padding-right: 17px;
  }

  .status_img {
    width: 16px;
    height: 16px;
    display: inline-block;
  }
  .status_img.loading {
    background-image: url(/img/loading.gif);
  }
  .status_img.verified {
    background-image: url(/img/profile-verified.png);
  }
  .status_img.unsupported {
    background-image: url(/img/profile-unsupported.png);
  }
  .status_img.error {
    background-image: url(/img/profile-error.png);
  }

  .continue_message .last-refresh {
    font-style: italic;
    float: right;
    margin-right: 10px;
  }

  #profiles .status {
    margin-left: 20px;
    color: #999;
  }

  .profile.selected {
    background-color: #ffffcc;
  }
</style>
